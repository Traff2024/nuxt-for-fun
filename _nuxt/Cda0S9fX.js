import{_ as B,a3 as O,a4 as R,a5 as q,r as n,c as N,o as l,a as u,b as t,t as o,x as m,a6 as D,w as x,v as b,a7 as H,a8 as j,f as w,D as L,d,p as P,a9 as z,F as C,m as V,N as G}from"./BQSGSKKo.js";const Q={style:{border:"1px solid red"}},Y={key:0,class:"notification"},J="green",K={__name:"modal",props:O({info:{type:String,default:"notification title from props"}},{title:{},titleModifiers:{}}),emits:["update:title"],setup(p){R(f=>({40684581:J}));const i=q(p,"title"),r=n(!0),c=()=>{r.value=!r.value},y=N(()=>r.value?"Close":"Open");return(f,g)=>(l(),u("div",Q,[t("button",{onClick:c},o(m(y)),1),m(r)?(l(),u("div",Y,[t("div",null,o(p.info),1),t("button",{onClick:c},"Close modal")])):D("",!0),t("div",null,[x(t("input",{type:"text","onUpdate:modelValue":g[0]||(g[0]=h=>i.value=h)},null,512),[[b,i.value]])])]))}},W=B(K,[["__scopeId","data-v-4d6bfef7"]]),X=H("basicStore",()=>{const p=n([]),i=n([{id:1,name:"Erik"},{id:2,name:"Erik2"},{id:3,name:"Erik3"}]);return{name:n("Eduardo"),users:p,items:i,testAsyncFunc:async()=>{const f=await(await fetch("https://reqres.in/api/users")).json();p.value=f.data}}}),Z=t("h2",null,"Home Page",-1),ee=["onClick"],te=["src"],oe=["onClick"],ae={__name:"index",setup(p){const i=G(),r=i.public.salam,c=n([]);console.log("API base URL test:",r),n("Info here");const y=X(),{testAsyncFunc:f}=y,{users:g,items:h,name:I}=j(y),k=n(!0),U=N(()=>k.value?"Yes":"No"),A=()=>{k.value=!k.value};n(!1);const E=n(),S=n(""),v=n(),_=n("");w(_,a=>{localStorage.setItem("test",a)});const F=a=>{c.value.push(a)},T=a=>{c.value.splice(a,1)};return w(v,(a,s)=>{a&&console.log("city newQuery",a,"city oldQuery",s)}),L(()=>{console.log(i.apiSecret),f(),_.value=localStorage.getItem("test")||""}),(a,s)=>{const $=W;return l(),u(C,null,[t("div",null,[Z,x(t("input",{type:"text",placeholder:"test local storage","onUpdate:modelValue":s[0]||(s[0]=e=>_.value=e)},null,512),[[b,_.value]]),d(" storage data "+o(_.value)+" ",1),x(t("input",{"onUpdate:modelValue":s[1]||(s[1]=e=>S.value=e),placeholder:"Search for a GitHub user"},null,512),[[b,S.value]]),d(" query "+o(S.value)+" ",1),x(t("input",{type:"text",placeholder:"Type your city","onUpdate:modelValue":s[2]||(s[2]=e=>v.value=e)},null,512),[[b,v.value]]),d(" dla modalki city "+o(v.value)+" ",1),P($,{title:v.value,"onUpdate:title":s[3]||(s[3]=e=>v.value=e)},null,8,["title"]),t("button",{onClick:A,class:z({yes:k.value})}," Button is active: "+o(U.value),3),t("ul",null,[(l(!0),u(C,null,V(m(g),e=>(l(),u("li",{key:e.id,onClick:M=>F(e)},[d(o(e.first_name)+" ",1),t("img",{src:e.avatar},null,8,te)],8,ee))),128)),d(" Tut bude nowyj array "),(l(!0),u(C,null,V(c.value,(e,M)=>(l(),u("div",{key:e.id},[t("span",{onClick:ne=>T(M)},o(e),9,oe)]))),128))]),d(" "+o(E.value)+" name "+o(m(I))+" ",1),t("ul",null,[(l(!0),u(C,null,V(m(h),e=>(l(),u("li",{key:e.id},o(e.name),1))),128))])]),d(" tra "+o(m(r)),1)],64)}}};export{ae as default};
